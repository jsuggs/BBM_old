<?php

namespace DoctrineProxies;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class BBMGameProxy extends \BBM\Game implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    private function _load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }

    
    public function setId($id)
    {
        $this->_load();
        return parent::setId($id);
    }

    public function x__construct(\BBM\Team $homeTeam, \BBM\Team $awayTeam, \DateTime $gameStart)
    {
        $this->_load();
        return parent::x__construct($homeTeam, $awayTeam, $gameStart);
    }

    public function setHomeTeam(\BBM\Team $team)
    {
        $this->_load();
        return parent::setHomeTeam($team);
    }

    public function setHomeStartingLineup(\BBM\StartingLineup $lineup)
    {
        $this->_load();
        return parent::setHomeStartingLineup($lineup);
    }

    public function getHomeTeam()
    {
        $this->_load();
        return parent::getHomeTeam();
    }

    public function setAwayTeam(\BBM\Team $team)
    {
        $this->_load();
        return parent::setAwayTeam($team);
    }

    public function setAwayStartingLineup(\BBM\StartingLineup $lineup)
    {
        $this->_load();
        return parent::setAwayStartingLineup($lineup);
    }

    public function getAwayTeam()
    {
        $this->_load();
        return parent::getAwayTeam();
    }

    public function addPitchingMatchup(\BBM\PitchingMatchup $matchup)
    {
        $this->_load();
        return parent::addPitchingMatchup($matchup);
    }

    public function getPitchingMatchups()
    {
        $this->_load();
        return parent::getPitchingMatchups();
    }

    public function setGameStart(\DateTime $time)
    {
        $this->_load();
        return parent::setGameStart($time);
    }

    public function addPlay(\BBM\Play $play)
    {
        $this->_load();
        return parent::addPlay($play);
    }

    public function getPlays()
    {
        $this->_load();
        return parent::getPlays();
    }

    public function isDivisionGame()
    {
        $this->_load();
        return parent::isDivisionGame();
    }

    public function setGameEnd(\DateTime $time)
    {
        $this->_load();
        return parent::setGameEnd($time);
    }

    public function setBallpark(\BBM\Ballpark $ballpark)
    {
        $this->_load();
        return parent::setBallpark($ballpark);
    }

    public function setUseDH($value)
    {
        $this->_load();
        return parent::setUseDH($value);
    }

    public function setAttendance($value)
    {
        $this->_load();
        return parent::setAttendance($value);
    }

    public function setTemprature($value)
    {
        $this->_load();
        return parent::setTemprature($value);
    }

    public function setHomePlateUmpire(\BBM\Umpire $umpire)
    {
        $this->_load();
        return parent::setHomePlateUmpire($umpire);
    }

    public function setFirstBaseUmpire(\BBM\Umpire $umpire)
    {
        $this->_load();
        return parent::setFirstBaseUmpire($umpire);
    }

    public function setSecondBaseUmpire(\BBM\Umpire $umpire)
    {
        $this->_load();
        return parent::setSecondBaseUmpire($umpire);
    }

    public function setThirdBaseUmpire(\BBM\Umpire $umpire)
    {
        $this->_load();
        return parent::setThirdBaseUmpire($umpire);
    }

    public function setTemperature($value)
    {
        $this->_load();
        return parent::setTemperature($value);
    }

    public function setWindDir($value)
    {
        $this->_load();
        return parent::setWindDir($value);
    }

    public function setWindSpeed($value)
    {
        $this->_load();
        return parent::setWindSpeed($value);
    }

    public function getGameLength()
    {
        $this->_load();
        return parent::getGameLength();
    }

    public function __toString()
    {
        $this->_load();
        return parent::__toString();
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'game_id', 'homeTeam', 'homeStartingLineup', 'awayTeam', 'awayStartingLineup', 'gameStart', 'gameEnd', 'ballpark', 'plays', 'pitchingMatchups', 'homePlateUmpire', 'firstBaseUmpire', 'secondBaseUmpire', 'thirdBaseUmpire', 'temperature', 'attendance', 'winddir', 'windspeed');
    }
}